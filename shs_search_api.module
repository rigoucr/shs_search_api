<?php
/**
 * @file shs_search_api.module
 * Shs + search api  Integration.
 * @author: Rodrigo Espinoza Brenes <espinoza.brenes.rodrigo@gmail.com>
 * @author: Kevin Porras <kporras07@gmail.com>
 * @version: 1.x
 */

/**
 * Implements hook_views_data_alter().
 */
function shs_search_api_views_data_alter(&$data) {
  // Get a list of all field instances with widget type "taxonomy_shs".
  $instances = _shs_get_instances('node');
  foreach ($instances as $field_instances) {
    foreach ($field_instances as $field_name => $instance) {
      // Replace filter handler for this field.
      if (module_exists('search_api')) {
        $indexers = search_api_index_options_list();
        foreach ($indexers as $indexer => $index_human_name) {
          if (!empty($data["search_api_index_{$indexer}"][$field_name]['filter']['handler'])) {
            $data["search_api_index_{$indexer}"][$field_name]['filter']['handler'] = 'shs_handler_filter_term_node_tid_search_api';
          }
        }
      }

    }
  }
}

/**
 * Return all descendant from a tid.
 */
function shs_search_api_taxonomy_get_all_descendants($tid, &$children = array(), $vid = 0) {
  $children_this = taxonomy_get_children($tid);
  if ($children_this) {
    $tids = array_keys($children_this);
    foreach ($tids as $tid) {
      $children[] = (string) $tid;
      shs_search_api_taxonomy_get_all_descendants($tid, $children, $vid);
    }
  }
  else {
    $children[] = (string) $tid;
    $children = array_unique($children);
  }
}
